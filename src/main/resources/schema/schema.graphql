type OrderedItem @relation(name: "Includes", from: "order", to: "item") {
    _id: ID!
    order: Order!
    item: Item!
    quantity: Int!
}

type Item {
    _id: ID!
    name: String!
    description: String!
    quantity: Int!
    price: Float!
    date: DateTime!
    isDiscontinued: Boolean!
    belongsTo: [Category!]! @relation(name: "BelongsTo")
    publishedBy: User! @relation(name: "PublishedBy")
}

type Category {
    _id: ID!
    name: String!
    description: String!
    includes: [Item!]! @relation(name: "Includes")
}

type User {
    _id: ID!
    displayName: String!
    login: String!
    passwordHash: String!
    email: String!
    registrationDate: Date!
    belongsTo: Role! @relation(name: "BelongsTo")
    has: [Order!]! @relation(name: "Has")
    sells: [Item!]! @relation(name: "Sells")
}

type Role {
    _id: ID!
    name: String!
    description: String!
    includes: [User!]! @relation(name: "Includes")
}

type Order {
    _id: ID!
    isPayed: Boolean!
    isCancelled: Boolean!
    date: DateTime!
    items: [OrderedItem!]
    by: User! @relation(name: "By")
    payedWith: Payment! @relation(name: "PayedWith")
}

type Payment {
    _id: ID!
    date: DateTime!
    amount: Float!
    type: String!
    belongsTo: Order! @relation(name: "belongsTo")
}

# https://github.com/neo4j-graphql/neo4j-graphql-java/issues/292

type Mutation {
    mutateOrderedItemProperties(
        _id: ID!,
        quantity: Int
    ): OrderedItem @cypher(statement: """@embed('/schema/orderedItem/OrderedItemMutateProperties.cypher')""")

    mutateItemRelations(
        _id: ID!,
        belongsToAdded: [Int!],
        belongsToDeleted: [Int!],
        publishedBy: ID
    ): Item @cypher(statement: """@embed('/schema/item/ItemMutateItemOneToManyRelations.cypher')""")

    mutateCategoryRelations(
        _id: ID!,
        includesAdded: [Int!],
        includesDeleted: [Int!]
    ): Category @cypher(statement: """@embed('/schema/category/CategoryMutateRelations.cypher')""")

    mutateOrderRelations(
        _id: ID!,
        by: ID,
        payedWith: ID
    ): Order @cypher(statement: """@embed('/schema/order/OrderMutateRelations.cypher')""")

    mutatePaymentRelations(
        _id: ID!,
        belongsTo: ID
    ): Order @cypher(statement: """@embed('/schema/payment/PaymentMutateRelations.cypher')""")

    mutateRoleRelations(
        _id: ID!,
        includesAdded: [Int!],
        includesDeleted: [Int!]
    ): Role @cypher(statement: """@embed('/schema/role/RoleMutateRelations.cypher')""")

    mutateUserRelations(
        _id: ID!,
        sellsAdded: [Int!],
        sellsDeleted: [Int!]
    ): User @cypher(statement: """@embed('/schema/user/UserMutateRelations.cypher')""")

    addItemToCategory(
        categoryId: ID!,
        itemId: ID!
    ): Category @cypher(statement: """@embed('/schema/category/CategoryMutateAddItemToCategory.cypher')""")
}

type Query {
    queryOrderedItem(_id: ID!): OrderedItem @cypher(passThrough: true, statement: """@embed('/schema/orderedItem/OrderedItemQuery.cypher')""")
}
